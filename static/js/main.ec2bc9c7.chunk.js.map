{"version":3,"sources":["logo.svg","Components/Chart.js","Functions/TextProcessing.js","Components/DataPage.js","Functions/FetchData.js","App.js","reportWebVitals.js","index.js"],"names":["BasicLineChart","data","x","y","height","col","config","xField","yField","legend","position","smooth","xAxis","tickCount","slider","start","end","animation","appear","duration","color","BarrierLineChart","barrier","annotations","type","content","offsetY","style","textBaseline","stroke","lineDash","JSONText","direction","console","log","Title","className","map","section","level","desc","Text","DataPage","useState","current","setCurrent","url","setData","loading","setLoading","useEffect","a","fetch","response","json","FetchData","require","ProgressCircle","value","strokeColor","percent","spinner","LoadingOutlined","fontSize","spin","Step","Steps","justify","gutter","title","indicator","active","length","toFixed","avaccine","cases","Math","abs","valueStyle","prefix","ArrowUpOutlined","ArrowDownOutlined","precision","suffix","AreaChart","width","margin","top","right","left","bottom","ticks","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stackId","fill","mortality","testing","size","onChange","val","description","mode","Item","label","defaultActiveKey","TabPane","tab","info","Menu","SubMenu","Layout","Header","Content","Sider","App","src","logo","alt","theme","defaultSelectedKeys","padding","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2bc9c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Line, Gauge } from '@ant-design/charts';\r\n\r\nfunction sortJson(object, a, b) {\r\n  var out = [];\r\n  for(let obj of object)\r\n  {\r\n    let res = {};\r\n    res[a] = obj[a];\r\n    res[b] = obj[b];\r\n    out.push(res);\r\n  }\r\n  return out;\r\n}\r\n\r\nexport function BasicLineChart({data, x, y, height, col}) {\r\n\tlet customCol = 0;\r\n\tif(col == 0 || col == null){\r\n\t\tcustomCol = \"#1890ff\";\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcustomCol = \"#F4664A\";\r\n\t}\r\n\r\n  let customHeight = 300;\r\n\tif(height == 0 || height == null){\r\n\t\tcustomHeight = 300;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcustomHeight = height;\r\n\t}\r\n\r\n    const config = {\r\n      \tdata,\r\n        height: customHeight,\r\n        xField: x,\r\n        yField: y,\r\n        legend: { position: 'top' },\r\n        smooth: true,\r\n        xAxis: { tickCount: 5 },\r\n        slider: {\r\n          start: 0,\r\n          end: 1,\r\n        },\r\n        animation: {\r\n          appear: {\r\n            animation: 'path-in',\r\n            duration: 2000,\r\n          },\r\n        },\r\n\t\tcolor: customCol,\r\n      };\r\n    return(\r\n        <Line {...config} />\r\n    )\r\n  \r\n}\r\n\r\n\r\nexport function BarrierLineChart({data, x, y, barrier}) {\r\n  const config = {\r\n      data,\r\n      height: 300,\r\n      xField: x,\r\n      yField: y,\r\n      legend: { position: 'top' },\r\n      smooth: true,\r\n      color: '#F4664A',\r\n      annotations: [\r\n        {\r\n          type: 'regionFilter',\r\n          start: ['min', barrier],\r\n          end: ['max', '-10000'],\r\n          color: '#1890ff',\r\n        },\r\n        {\r\n          type: 'text',\r\n          position: ['min', 'median'],\r\n          content: 'Zero',\r\n          offsetY: -4,\r\n          style: { textBaseline: 'bottom' },\r\n        },\r\n        {\r\n          type: 'line',\r\n          start: ['min', barrier],\r\n          end: ['max', barrier],\r\n          style: {\r\n            stroke: '#F4664A',\r\n            lineDash: [2, 2],\r\n          },\r\n        },\r\n      ],\r\n      animation: {\r\n        appear: {\r\n          animation: 'path-in',\r\n          duration: 2000,\r\n        },\r\n      },\r\n    };\r\n  return(\r\n      <Line {...config} />\r\n  )\r\n}\r\n\r\nexport function CustomGuage({value})\r\n{\r\n  var config = {\r\n    width: 300,\r\n    percent: value,\r\n    range: {\r\n      ticks: [0, 1 / 3, 2 / 3, 1],\r\n      color: ['#30BF78', '#FAAD14', '#F4664A'],\r\n    },\r\n    indicator: {\r\n      pointer: { style: { stroke: '#D0D0D0' } },\r\n      pin: { style: { stroke: '#D0D0D0' } },\r\n    },\r\n    statistic: {\r\n      content: {\r\n        style: {\r\n          fontSize: '36px',\r\n          lineHeight: '36px',\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return <Gauge {...config} />;\r\n}","import {\r\n    Typography,\r\n    Space,\r\n  } from 'antd';\r\n\r\nexport function JSONText(data) {\r\n    return(\r\n        <Space direction=\"vertical\">{console.log(\"Color:\", data[\"data\"][\"color\"])}\r\n            <Typography.Title className={data[\"data\"][\"color\"]}>{data[\"data\"][\"zone\"]}</Typography.Title>\r\n            {\r\n                data[\"data\"][\"data\"].map((section) =>\r\n                    <Space direction=\"vertical\">\r\n                        <Typography.Title level={3}>{section[\"title\"]}</Typography.Title>\r\n                        { \r\n                            section[\"desc\"].map((desc) => <Space direction=\"vertical\"><Typography.Text>{desc[\"text\"]}</Typography.Text><Typography.Text className=\"subtext\" type=\"secondary\">{desc[\"subtext\"]}</Typography.Text></Space>)\r\n                        }\r\n                    </Space>\r\n                )\r\n            }\r\n\r\n        </Space>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    Progress,\r\n    Timeline,\r\n    Steps,\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Statistic,\r\n    Typography,\r\n\tSkeleton,\r\n\tSpin,\r\n\tTabs,\r\n  } from 'antd';\r\n  \r\nimport {\r\n    ArrowUpOutlined,\r\n    ArrowDownOutlined, \r\n\tLoadingOutlined,\r\n  } from '@ant-design/icons';\r\n  \r\nimport { BasicLineChart, BarrierLineChart} from './Chart';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,ResponsiveContainer } from 'recharts';\r\nimport { FetchData } from '../Functions/FetchData';\r\nimport { JSONText } from '../Functions/TextProcessing';\r\n\r\n\r\nexport function DataPage() {\r\n    const [current, setCurrent] = useState(0);\r\n    const { data, loading } = FetchData(\r\n      'https://api.opencovid.ca/timeseries?stat=active_cases&loc=ON'\r\n    );\r\n\r\n\tconst content = require('../data.json');\r\n    \r\n  \r\n    const onChange = (val) => {\r\n      console.log('onChange:', val);\r\n      setCurrent(val);\r\n    };\r\n  \r\n    const ProgressCircle = ({value}) => (\r\n        <>\r\n        <Progress\r\n            type=\"circle\"\r\n            strokeColor={{\r\n            '0%': '#feff00',\r\n            '100%': '#ff5900',\r\n            }}\r\n            percent={value}\r\n        />\r\n        </>\r\n    );\r\n\r\n\tconst spinner = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n\r\n    const { Step } = Steps;\r\n    const mode = 'left';\r\n\r\n    return(\r\n        <div>\r\n            <Row justify=\"start\" gutter={[16, 16]} className=\"card-row-container\">\r\n              <Col>\r\n                <Card title=\"Mortality Rate\" className=\"card-row-small\">\r\n\t\t\t\t\t{loading ? <Spin indicator={spinner} /> : <ProgressCircle value={((data.active[data.active.length - 1][\"cumulative_deaths\"] / data.active[data.active.length - 1][\"cumulative_cases\"])*100).toFixed(2)} />}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card title=\"Vaccination Progress\" className=\"card-row-small\">\r\n\t\t\t\t{loading ? <Spin indicator={spinner} /> : <ProgressCircle value={(data.avaccine[data.avaccine.length - 1][\"cumulative_avaccine\"] / 14570000).toFixed(2)} />}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card title=\"Today\" className=\"card-row-small\">\r\n\t\t\t\t{loading ? <Spin indicator={spinner} /> :\r\n                  \t<Statistic title=\"Cases\" value={data.cases[data.cases.length-1][\"cases\"]}/>\r\n\t\t\t\t}\r\n                  <Divider />\r\n\t\t\t\t  {loading ? <Spin indicator={spinner} /> :\r\n\t\t\t\t  <Statistic\r\n                    title=\"Change\"\r\n                    value={Math.abs(data.cases[data.cases.length-1][\"cases\"]-data.cases[data.cases.length-2][\"cases\"])}\r\n                    valueStyle={data.cases[data.cases.length-1][\"cases\"]-data.cases[data.cases.length-2][\"cases\"] > 0 ? {  color: '#cf1322' } : {  color: '#3f8600' }}\r\n                    prefix={data.cases[data.cases.length-1][\"cases\"]-data.cases[data.cases.length-2][\"cases\"] > 0 ?  <ArrowUpOutlined/> : <ArrowDownOutlined/>}\r\n                  />}\r\n                </Card>\r\n              </Col>\r\n              <Col>\r\n                <Card className=\"card-row-small\">\r\n                  <Statistic\r\n                    title=\"Daily Cases\"\r\n                    value={11.28}\r\n                    precision={2}\r\n                    valueStyle={{ color: '#3f8600' }}\r\n                    prefix={<ArrowUpOutlined />}\r\n                    suffix=\"%\"\r\n                  />\r\n                  <Divider />\r\n                  <Statistic\r\n                    title=\"Idle\"\r\n                    value={9.3}\r\n                    precision={2}\r\n                    valueStyle={{ color: '#cf1322' }}\r\n                    prefix={<ArrowDownOutlined />}\r\n                    suffix=\"%\"\r\n                  />\r\n                </Card>\r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Daily Cases\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.cases} x={'date_report'} y={'cases'} />\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n              <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Active Cases\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.active} x={'date_active'} y={'active_cases'} />\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-larger noflex\" >    \r\n                <Card title=\"Active Cases Change\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BarrierLineChart data={data.active} x={'date_active'} y={'active_cases_change'} barrier={0}/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Daily Vaccination\" >    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.avaccine} x={'date_vaccine_administered'} y={'avaccine'} className=\"chart-base-height\"/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Total Vaccination\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.avaccine} x={'date_vaccine_administered'} y={'cumulative_avaccine'}/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large noflex\" >    \r\n                <Card title=\"Recovery\" >    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n\t\t\t\t\t\t<AreaChart\r\n\t\t\t\t\t\t\twidth={600}\r\n\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\tdata={data.active}\r\n\t\t\t\t\t\t\tmargin={{\r\n\t\t\t\t\t\t\ttop: 10,\r\n\t\t\t\t\t\t\tright: 30,\r\n\t\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\t\tticks: 5,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t<XAxis dataKey='date_active' />\r\n\t\t\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t\t\t<Area type=\"natural\" dataKey='cumulative_recovered' stackId=\"1\" stroke=\"#1890ff\" fill=\"#1890ff\" />\r\n\t\t\t\t\t\t\t<Area type=\"natural\" dataKey='cumulative_deaths' stackId=\"1\" stroke=\"#F4664A\" fill=\"#F4664A\" />\r\n\t\t\t\t\t\t</AreaChart>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Daily Deaths\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.mortality} x={'date_death_report'} y={'deaths'} col={1}/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Total Deaths\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.mortality} x={'date_death_report'} y={'cumulative_deaths'} col={1}/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Daily Testing\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.testing} x={'date_testing'} y={'testing'} col={0}/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n\t\t\t  <Col className=\"chart-large flex1\" >    \r\n                <Card title=\"Total Tests Conducted\">    \r\n                  {loading ? (<Skeleton />\r\n                  ) : (\r\n                    <BasicLineChart data={data.testing} x={'date_testing'} y={'cumulative_testing'} col={0}/>\r\n                  )}\r\n                  </Card>   \r\n              </Col>\r\n            </Row>\r\n            <Divider />\r\n            <Card title=\"Timeline\">\r\n              <Steps\r\n                type=\"navigation\"\r\n                size=\"default\"\r\n                current={current}\r\n                onChange={onChange}\r\n                className=\"site-navigation-steps\"\r\n              >\r\n                <Step title=\"Setup\" description=\"This is a description.\" />\r\n                <Step title=\"Development\" description=\"This is a description.\" />\r\n                <Step title=\"Deployment\" description=\"This is a description.\" />\r\n              </Steps>\r\n            </Card>\r\n            <Card>\r\n              <Timeline mode={mode}>\r\n                <Timeline.Item label=\"2015-09-01\">step1</Timeline.Item>\r\n                <Timeline.Item label=\"2015-09-01\">step2</Timeline.Item>\r\n                <Timeline.Item label=\"2015-09-01\">step3</Timeline.Item>\r\n                <Timeline.Item label=\"2015-09-01\">step4</Timeline.Item>\r\n              </Timeline>\r\n            </Card>\r\n\t\t\t<Divider/>\r\n\t\t\t<Card>\r\n\t\t\t<Tabs defaultActiveKey=\"1\">\r\n\t\t\t\t<Tabs.TabPane tab=\"Lockdown\" key=\"1\">\r\n\t\t\t\t\t<JSONText data={content.info[0]}/>\r\n\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t<Tabs.TabPane tab=\"Control\" key=\"2\">\r\n\t\t\t\t<JSONText data={content.info[1]}/>\r\n\t\t\t\t</Tabs.TabPane>\t\t\t\t\r\n\t\t\t\t<Tabs.TabPane tab=\"Restrict\" key=\"3\">\r\n\t\t\t\t<JSONText data={content.info[2]}/>\r\n\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t<Tabs.TabPane tab=\"Protect\" key=\"4\">\r\n\t\t\t\t<JSONText data={content.info[3]}/>\r\n\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t<Tabs.TabPane tab=\"Prevent\" key=\"5\">\r\n\t\t\t\t<JSONText data={content.info[4]}/>\r\n\t\t\t\t</Tabs.TabPane>\r\n\t\t\t</Tabs>\r\n            </Card>\r\n        </div>\r\n      )\r\n    }\r\n  \r\n  ","import { useState, useEffect } from \"react\";\r\n\r\nexport function FetchData(url) {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(async () => {\r\n        if(loading){\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            setData(data);\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return {data, loading};\r\n}","import './App.css';\nimport 'antd/dist/antd.css';\n\nimport logo from './logo.svg';\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n\nimport { DataPage } from './Components/DataPage';\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nfunction App() {\n\treturn (\n\t\t<Layout>\n\t\t\t<header className=\"header-custom\">\n\t\t\t\t<div className=\"nav-logo-container\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t<b style={{ color: 'white' }}>Covid Canada</b>\n\t\t\t\t</div>\n\t\t\t\t<Menu className=\"fit-content\" theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n\t\t\t\t\t<Menu.Item key=\"1\">Statistics</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"2\">nav 2</Menu.Item>\n\t\t\t\t\t<Menu.Item key=\"3\">nav 3</Menu.Item>\n\t\t\t\t</Menu>\n\t\t\t</header>\n\t\t\t<Layout>\n\n\t\t\t\t<Layout style={{ padding: '0 24px 24px' }}>\n\t\t\t\t\t<Breadcrumb style={{ margin: '16px 0' }}>\n\t\t\t\t\t\t<Breadcrumb.Item>Home</Breadcrumb.Item>\n\t\t\t\t\t\t<Breadcrumb.Item>List</Breadcrumb.Item>\n\t\t\t\t\t\t<Breadcrumb.Item>App</Breadcrumb.Item>\n\t\t\t\t\t</Breadcrumb>\n\t\t\t\t\t<Content\n\t\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\tminHeight: 280,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Page contents go here*/}\n\t\t\t\t\t\t<DataPage />\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n\n// <Chart data={data.active} x=\"date_active\" y=\"active_cases\" />\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}